#Black & Scholes modelling

import numpy as np
from scipy.stats import norm
import matplotlib.pyplot as plt

# N() = cumulative distribution function
# T = time left til' maturity (in years)
# S = stock price
# K = strike price
# r = risk free rate
# sigma = volatility


N = norm.cdf

def BS_CALL(S, K, T, r, sigma):
    d1 = (np.log(S/K)+ (r+sigma**2/2)*T)/sigma*np.sqrt(T) #Modelling
    d2 = d1 - sigma*np.sqrt(T)
    return S*N(d1)-K*np.exp(-r*T) * N(d2) #Write it manually
